# day20 > 1_분류_분석.py

"""
    > 로지스틱 회귀
        > 이진 분류 문제에서 주로 사용되는 통계 방법
        > 주어진 데이터 기반으로 두 가지 범주 중 하나를 예측하는 모델
            > ex_ 환자가 질병에 걸릴 지에 대한 여부(1 : 걸림, 2 : 안 걸림), 이메일의 스팸 여부(1 : 스팸, 0 : 정상)

        > 이진 분류 : 두 가지 결과를 예측
        > 시그모이드 함수 : 두 가지의 결과를 예측을 확률값으로 표현, 시그모이드 함수 방정식

"""

import pandas as pd
from sklearn.linear_model import LogisticRegression

# 예제 1. 공부 시간에 따른 합격 예측 여부
# [1] 샘플 데이터
data = {
    "공부_시간" : [2, 5, 1, 10, 8, 12, 7, 3],
    "합격_여부" : [0 ,1, 0, 1, 1, 1, 1, 0], # 1 : 합격, 0 : 불합격
}

# DataFrame 생성
df = pd.DataFrame(data)

# [2] 독립 변수와 종속 변수 분리
x = df[["공부_시간"]]
y = df["합격_여부"]
# print(x)
# print(y)

# [3] 로지스틱 회귀 모델 생성
model = LogisticRegression()
model.fit(x, y)

# [4] 새로운 공부 시간을 이용한 예측 수행, predict_proba() -> 모델에서 각 값이 속할 확률을 반환하는 함수
new_x = [[6]]
result = model.predict_proba(new_x)
# print(result)
# print(result[0][0])     # 0.1262731506830168%   -> 공부 시간이 6시간 일 때 불합격에 속할 확률
# print(result[0][1])     # 0.8737268493169832%   -> 공부 시간이 6시간 일 떄 합격에 속할 확률

# 예제 2. 쇼핑몰의 고객들의 정보를 이용한 특정 제품 구매 확률 분석
# [1] 샘플 데이터
data = {
    "나이" : [25, 45, 40, 24, 31, 16, 67, 55],
    "접속_수" : [50, 100, 54, 156, 12, 40, 50, 102],
    "구매_여부" : [0, 1, 0, 1, 1, 0, 1, 1]
}

# [2] 독립 변수와 종속 변수 분리
df1 = pd.DataFrame(data)

x = df1[["나이", "접속_수"]]
y = df1["구매_여부"]

# [3] 로지스틱 회귀 모델 생성
model1 = LogisticRegression()
model1.fit(x, y)

# [4] 새로운 고객의 정보를 이용한 특정 제품 구매 확률 예측
new_x2 = [[51, 40]]
new_result = model1.predict_proba(new_x2)

print(new_result[0][0])     # 0.18335770232533255% -> 고객의 나이가 51이고, 접속_수가 40일 때 구매하지 않을 확률
print(new_result[0][1])     # 0.8166422976746675% -> 고객의 나이가 51이고, 접속_수가 40일 때 구매할 확률
