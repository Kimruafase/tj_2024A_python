[신경망]
    > 사람의 뇌를 컴퓨터 속에서 표현한 단어, 네트워크

[뉴런(노드)]
    > 사람의 뇌의 신경 세포(뉴런)를 컴퓨터에서 표현한 단어

[레이어(층)]
    > 인공(사람이 만들어낸) 신경망(뇌)에서 가장 기본적인 레이어 / 층
    > 레이어에는 각 노드(뉴런)가 이전 레이어의 모든 노드와 연결된 상태 = 완전 연결층
    > 기본 레이어 / 층 단계
        > 입력층(독립변수) -> 은닉층 1 -> 은닉층 2 -> 은닉층 3 -> 출력층(종속변수)

[합성곱 신경망] : CNN
    > 이미지를 인식할 수 있는 능력을 갖춘 모델이다.
    > 사용처 : 스마트폰 얼굴인식 잠금장치, 자동차 자율 주행, 의료 영상 분석... etc
    > 핵심 개념 : 1. 합성곱 연산 2. 풀링
    > CNN 핵심 구조
        > 1. 입력층    : 학습할 원본 이미지들을 모델이 입력 받음
            > 32px * 32px 크기의 이미지라면 2차원 리스트 / 배열로 입력 받는다.

        > 2. 합성곱층  : 이미지를 필터(커널)를 적용해서 중요한 패턴이나 특징을 추출한다.
            > 이미지 패턴 감지 역할, 이미지에서 특징을 추출하는 합성곱 연산을 수행

        > 3. 풀링층    : 이미지 크기를 줄여 계산량을 줄이고, 중요하지 않은 세부 정보를 무시하고 모델의 성능을 높인다.
            > 영역의 크기를 조정한다.

        > 4. 완전연결층 : 추출한 특징을 바탕으로 분류나 예측하기 위해서 학습한다.
            > 모든 뉴런이 서로 연결된다.

        > 5. 출력층    : 최종 예측을 제공한다.
            > 예측하고 확률을 출력한다.

    > CNN 특징
        > 1. 공간적 정보 유지
        > 2. 파라미터 효율성
        > 3. 자동 특성 추출
        > 4. 다양한 분야 적용

[합성곱]
    > CNN(합성곱 신경망)의 핵심 연산
    > 이미지와 커널(필터)를 결합하여 중요한 특징을 추출하는 방식
    > 합성곱 원리
        > 1. 커널(필터) : 주로 작은 3 x 3, 5 x 5 크기로 이미지의 작은 영역과 곱셈 및 덧셈 연산을 수행하여 새로운 값(특성 맵)을 생성한다.
        > 2. 스트라이드 : 커널이 이미지를 이동하는 간격을 의미한다. (전체 이미지에서 작은 영역(특정 부분)을 이동하면서 필터링을 한다.)
            > 스트라이드 1이면 1칸씩 이동, 2면 2칸씩 이동 -> 스트라이드가 더 크면 빠른 처리가 가능하지만 세부 정보가 누락될 수 있다.
            > 적절한 수치 조절 필요

        > 3. 제로 패딩 : 커널이 이미지 가장자리를 벗어나지 않도록 이미지를 둘러싼 테두리에 0으로 채워주는 기법
            > 이미지 크기를 유지하거나 특징 손실을 방지한다.

[커널(필터)]
    > 커널은 보통 2차원(2D) 형태를 가지고 있다. 주로 3 x 3, 5 x 5 크기를 사용한다.
    > 이미지의 특정 부분을 곱셈 및 덧셈을 통해 새로운 값(특성 맵)을 생성한다.
    > 커널 원리
        > 1. 합성곱 연산
        > 2. 특정 맵 생성 : 각 특정한 특징(가장자리, 선, 질감 등등)을 나타낸다.
        > 3. 학습 가능한 파라미터(변수) : 초기에는 무작위로 설정되지만, 역전파 과정을 통해 손실(오차)을 최소화하는 방향으로 자동 조정

[손실(오차)]
    > 어떠한 물체나 현상을 측정한 값이 실제의 것과 동떨어진 정도
    > AI의 중요한 부분 : 진짜(실존한 값)와 가짜(컴퓨터가 학습해서 예측한 값)의 차이를 줄이는 기술

[역전파]
    > 신경망의 학습을 위한 핵심 기법(알고리즘)이고, 손실(오차) 함수의 기울기(Gradient)를 계산하고, 이를 통해 가중치를 추출한다.

[가중치]
    > 표본(특정 집단)의 각 관측치에 대한 중요도를 나타내는 값
    > ex_1 유튜브 알고리즘(내가 많이 보는 유형의 영상을 추천한다 -> ex_ 분야별, 나이별, 여러가지 취향을 반영)
        > 축구 분야를 좋아하면 조금 더 축구 분야의 가중치(점수)를 주고 추천한다.

    > ex_2 대학교 입시 내신 성적 가중치(수학이 과학 점수보다 더 많은 중요도가 필요하면 수학 성적에 가중치를 더 부여해서 입학 점수를 측정)
        > 수학 90, 과학 100일 때 수학 가중치가 80%, 과학 가중치 20%

    > 신경망에서 중요한 파라미터이고 입력값에 가중치를 계산한 후 학습한다. 역전파를 통해 학습된 새로운 가중치를 업데이트 한다.
        > 이러한 작업을 반복적인 학습을 하여 손실(오차)을 최소화한다. -> 경사하강법(Gradient Descent), 수학에서의 미분

    > 전체적인 학습 흐름
        > 1. 데이터를 신경망에 입력
        > 2. 입력한 값과 학습한 값 간의 차이를 계산하여 손실(오차)을 계산
        > 3. 역전파(계산법)를 통해 손실(오차) 함수에 대한 각 가중치의 기울기를 계산
        > 4. 경사 하강법(Gradient Descent)을 사용하여 가중치를 업데이트
        > 5. 이 과정을 반복하여 신경망의 성능 최적화

[채널]
    > 색상 정보를 담고있는 각 구성요소이다.
    > 빨강(R), 초록(G), 파랑(B)의 세 가지 기본 색상 채널이 존재한다.
    > ex_ 종류
        흑백 이미지 : 1채널(회색)
        컬러 이미지 : 3채널(R채널, G채널, B채널), RGBA(4채널)

[스트라이드]
    > 커널(필터)이 한번에 몇 px을 이동하는 지 결정하며, 이미지의 크기와 특성 맵의 크기를 조정한다.
    > 주로 1 or 2를 사용한다.
    > 높은 스트라이드는 계산 효율성과 일반화에 좋고 세부 정보 손실이 우려된다.
    > 낮은 스트라이드는 세부 정보를 유지하는데 계산 비용 증가와 과적합이 우려된다.

[패딩]
    > 이미지의 가장자리에 픽셀을 추가, 일반적으로 0으로 채워진 픽셀이다.
    > 특징
        > 1. 특성 맵 크기 유지 : 패딩을 추가하면 필터가 이미지의 모든 부분을 고르게 처리할 수 있다.
        > 2. 정보 손실 방지    : 종종 가장자리 정보의 손실이 발생하는데 패딩을 추가하면 이를 방지할 수 있다.
        > 3. 학습 안정성 향상  : 경계(가장자리)의 왜곡을 줄일 수 있다. 경계 효과를 줄인다.
        > 4. 연산 효율성       : 더 복잡한 패턴을 학습하는데 도움이 된다.

[풀링]
    > 필터(커널)를 사용하여 이미지의 작은 영역에서 특정 통계값을 계산하여 크기를 줄이는 과정
    > 최대값이나 평균값을 선택하여 그 영역의 하나의 값으로 대체한다.
    > 특징
        > 1. 특징 추출      : 중요한 특징을 추출하고 강조하여 각 영역에서 큰 값 또는 평균값을 선택하므로 중요한 정보는 보존이 가능하다.
        > 2. 차원 축소      : 메모리 사용량이 감소하며 학습 속도를 높이고 깊은 신경망을 설계할 수 있다.
        > 3. 불변성 향상     : 더 일반화한 신경망을 학습할 수 있다.
        > 4. 과적합 방지     : 모델의 복잡성을 줄일 수 있다.

[픽셀]
    > 이미지를 구성하는 기본 단위(점) ex_ 720px, 1080px

[이미지에서 커널(필터) 특성 / 특징 추출]
    > 픽셀 추출 (흑백이면 0 ~ 255, 컬러면 R(0 ~ 255), G(0 ~ 255), B(0 ~ 255))
    > 주요 특성
        > 1. 모서리 / 선 : ex_ 사각형인지 삼각형인지 판단
        > 2. 색상 / 질감 : ex_ 티셔츠의 매끈한 느낌 or 거친 느낌을 판단
        > 3. 얼굴 인식   : ex_ 눈, 코, 입
        > etc

    > 커널(필터) : 안경 / 에어컨 필터 등등 처럼 시각적으로 이미지에서 중요한 특성(모서리, 질감)을 찾아내는 과정
    > 특성 맵    : 이렇게 찾은 특성을 기록해서 새롭게 만들어낸 출력 데이터